version: "1.0"
services:
  frontend:
    image: paperless:nginx
    build:
      dockerfile: ui/Dockerfile
    ports:
      - "8080:80"

  backend:
    image: paperless:openjdk
    build:
      dockerfile: Dockerfile
    ports:
      - "8088:8088"
    depends_on:
      - elasticsearch

  postgres:
    container_name: postgres
    image: postgres:latest
    environment:
      POSTGRES_DB: swen3-db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  minio:
    container_name: minio
    image: minio/minio
    restart: always
    working_dir: "/minio-image/storage"
    volumes:
        - ./Storage/minio/storage:/minio-image/storage
    ports:
        - "9000:9000"
        - "9001:9001"
    environment:
        MINIO_ROOT_USER: minio-image
        MINIO_ROOT_PASSWORD: minio-image-pass
    command: server /minio-image/storage --console-address :9001

  rabbitmq:
    container_name: "rabbitmq"
    image: "rabbitmq:3-management"
    hostname: "rabbitmq"
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    ports:
      - "5672:5672"  # RabbitMQ server
      - "15672:15672"  # RabbitMQ management

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.1
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - esdata1:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.1
    container_name: kibana
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    ports:
      - "9092:5601"
    depends_on:
      - elasticsearch

  ocrservice:
    image: ocrservice
    build:
      context: ./OCR-mapper/OCRMapper
      dockerfile: Dockerfile
    ports:
      - "8090:8090"
    environment:
      - ELASTICSEARCH_URL=elasticsearch:9200
      - SPRING_DATA_ELASTICSEARCH_CLUSTERNODES=elasticsearch:9200
    depends_on:
      - elasticsearch
    restart: unless-stopped
    
volumes:
  postgres_data:
  minio_data:
  esdata1:
    driver: local

